from def_b30 import b30,r10,get_user_info_pic
from PIL import Image, ImageFont, ImageDraw, ImageFilter
import imageio.v2 as imageio
"""数据库路径"""
db_file_path='F:/rinsama-aqua/rinsama-aqua/data/db.sqlite'
"""生成b30单项图片"""
def b30_single_pic(music_data):
    color = {
        '3': (187, 51, 238),#master
        '2': (238, 67, 102),#expert
        '1': (254, 170, 0),#advanced
        '4': (0, 0, 0),#ultima
        '0': (102, 221, 17)#basic
    }
    music_name = music_data['music_name']
    pic = Image.new("RGB", (620, 240), (255, 255, 255))
    """粘贴歌曲封面"""
    jacket=imageio.imread(music_data['jacket'])
    jacket=Image.fromarray(jacket)
    jacket=jacket.resize((186,186))
    pic.paste(jacket,(32,28))
    """写入曲目名称"""
    draw = ImageDraw.Draw(pic)
    font = ImageFont.truetype('fonts/YuGothicUI-Semibold.ttf', 36)
    size = font.getsize(music_name)
    if size[0] > 365:
        music_name = music_name[:int(len(music_name) * (345 / size[0]))] + '...'
    draw.text((240, 27), music_name, '#000000', font)
    """写入分数"""
    font = ImageFont.truetype('fonts/FOT-RodinNTLGPro-DB.ttf', 58)
    draw.text((234, 87), str(music_data['score_max']), '#000000', font)
    """写入难易度与定数变化"""
    font = ImageFont.truetype('fonts/SourceHanSansCN-Bold.otf', 38)
    draw.ellipse((242, 165, 286, 209), fill=color[str(music_data['level'])])
    draw.rectangle((262, 165, 334, 209), fill=color[str(music_data['level'])])
    draw.ellipse((312, 165, 356, 209), fill=color[str(music_data['level'])])
    draw.text((259, 157), str(music_data['constant']), (255, 255, 255), font)
    draw.text((370, 157), '→ ' + str((music_data['rating'])), (0, 0, 0), font)
    """写入是否AJ或FC"""
    font = ImageFont.truetype('fonts/FOT-RodinNTLGPro-DB.ttf', 35)
    if music_data['is_all_justice'] == 1:
        draw.text((530, 105), "AJ", '#000000', font)
    elif music_data['is_full_combo'] == 1:
        draw.text((530, 105), "FC", '#000000', font)
    pic = pic.resize((280, 105))
    return pic

"""调用b30函数返回best30乐曲列表"""
"""'music_id': music_id, 'score_max': score_max, 'rating': rating_value,'level':level,
    'constant':constant,'is_all_justice':is_all_justice,'is_full_combo':is_full_combo,
    'music_name':music_name,'jacket':jacket}"""
best30_list=b30(db_file_path)
recent10_list=r10(db_file_path)
pic=Image.open('assets/chub30lmn.png')
user_info_pic=get_user_info_pic(db_file_path)
draw = ImageDraw.Draw(pic)
"""依次生成单张b30图片并粘贴到背景图片上"""
rating=0
i=0
for item in best30_list:
    single_pic=b30_single_pic(item)
    pic.paste(single_pic, ((int(53 + (i % 5) * 290)), int(289 + int(i / 5) * 127)))
    rating+=item['rating']
    i=i+1
b30=rating/30
"""绘制B30数字"""
font_style = ImageFont.truetype("fonts/SourceHanSansCN-Bold.otf", 37)
draw.text((1331, 205), str(round(b30, 4)), fill=(255,255,255,255), font=font_style, stroke_width=2, stroke_fill="#38809A")

"""依次生成单张r10图片并粘贴到背景图片上"""
rating=0
i=0
for item in recent10_list:
    single_pic=b30_single_pic(item)
    pic.paste(single_pic, ((int(1582 + (i % 2) * 290)), int(289 + int(i / 2) * 127)))
    rating += item['rating']
    i=i+1
"""绘制r10数字"""
r10=rating/10
draw.text((1717, 205), str(round(r10, 4)), fill=(255,255,255,255), font=font_style, stroke_width=2, stroke_fill="#38809A")

"""绘制总rating"""
rank = round((b30 * 3 + r10) / 4, 4)
font_style = ImageFont.truetype("fonts/SourceHanSansCN-Medium.otf", 16)
# 创建一个单独的图层用于绘制rank阴影
rankimg = Image.new("RGBA", (140, 55), (100, 110, 180, 0))
draw = ImageDraw.Draw(rankimg)
font_style = ImageFont.truetype("fonts/SourceHanSansCN-Bold.otf", 34)
text_width = font_style.getsize(str(rank))
draw.text((int(70 - text_width[0] / 2), int(20 - text_width[1] / 2)), str(rank), fill=(61, 74, 162, 210),
          font=font_style, stroke_width=2, stroke_fill=(61, 74, 162, 210))
rankimg = rankimg.filter(ImageFilter.GaussianBlur(1.2))
draw = ImageDraw.Draw(rankimg)
draw.text((int(70 - text_width[0] / 2), int(20 - text_width[1] / 2)), str(rank), fill=(255, 255, 255), font=font_style)
r, g, b, mask = rankimg.split()
pic.paste(rankimg, (712, 118), mask)
"""粘贴用户信息"""
pic.paste(user_info_pic, (57, 55), user_info_pic.split()[3])
"""绘制数据来源，设计者，生成来源"""
text = '\n'
text += 'Data is from Rin Auqa local \n'
text += 'Designed by Watagashi_uni\nGenerated by binnbou30'
font_style = ImageFont.truetype("fonts/SourceHanSansCN-Medium.otf", 16)
# 创建一个透明图层，用于绘制半透明文字
shadow_layer = Image.new('RGBA', pic.size, (255, 255, 255, 0))
shadow_draw = ImageDraw.Draw(shadow_layer)

# 绘制文字阴影
shadow_position = (1976, 996) if len(text.split('\n')) == 3 else (1976, 977)
shadow_draw.text(shadow_position, text, fill=(0, 0, 0, 150), font=font_style, align='right')
shadow_layer = shadow_layer.filter(ImageFilter.GaussianBlur(0.5))
# 将带有阴影的图层合并到原始图像上
pic.paste(Image.alpha_composite(pic.convert('RGBA'), shadow_layer), (0, 0))

# 在原始图像上绘制不透明的文字
draw = ImageDraw.Draw(pic)
text_position = (1975, 995) if len(text.split('\n')) == 3 else (1975, 976)
draw.text(text_position, text, fill=(255, 255, 255), font=font_style, align='right')

pic.show()

